[{"content":"Stack의 개념 자료 구조에서 한 쪽 끝에서만 자료를 넣고 빼는 후입선출 특성의 LIFO (Last In First Out) 선형 자료구조j\n특징 LIFO (Last In First Out) 구조를 가지고 있음 가장 최근에 스택에 추가된 항목이 먼저 제거되어야 함 스택에서 데이터 추가 및 삭제하는 연산이 다른 자료구조에 비해 빠름 n번째 항목에 직접 접근 할 수 없음 배열처럼 원소들을 하나씩 옆으로 밀어줄 수 없음 주요 연산 pop 연산: 스택에서 가장 위에 있는 항목을 반환 하며, 제거한다. push 연산: 자료를 스택의 가장 윗 부분에 추가한다. top 연산: 스택의 가장 위에 있는 항목을 반환한다. isEmpty 연산: 스택이 비어있는 경우 true를 반환 / 자료가 존재하는 경우 false를 반환한다. 장점 자료 구조가 단순하여 구현이 쉬움 데이터 저장/읽기 속도가 빠름 단점 데이터의 최대 개수가 사전에 정의되어야 함 저장공간 낭비로 이어질 수 있음 활용 웹 브라우저 방문 기록 (뒤로 가기) 실행 취소 (Undo) 역순 문자열 만들기 수식의 괄호 연산 (VPS,Valid Parenthesis String) 후위 표기법 계산 ","date":"2024-01-09T11:33:27+09:00","permalink":"https://tteoks.github.io/p/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-stack-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC/","title":"[자료구조] Stack 개념 정리"},{"content":"첫 포스팅 안녕하세요 블로그 시작을 알리는 글 입니다.\n블로그의 내용은 제가 관심있어하는 기술에 대해서 정리할 예정입니다.\n정리되는 내용은 학습한 내용이나, 공유 드릴 만한 정보입니다.\n기술 블로그 운영 계기 다양한 이유가 있겠지만, 저의 경우 공부 내용 백업 및 공유가 주된 이유입니다.\n어디서든 확인 및 저장할 수 있는 공부 자료 저장소를 운영하고 싶었습니다. 공개된 공간에 자료를 공개함으로써, 정보에 대해 책임감을 가지고 공부할 수 있지 않을까 싶습니다. 여러 피드백을 통해 자료의 질을 높이고, 잘못된 정보는 바로 잡으려합니다. 마치며 계기를 적다보니 이유가 거창해졌는데 원래 시작은 거창하게 하는편입니다.\n중요한건 저런 고민을 했다는게 중요하다고 생각합니다.\n피드백 및 소통은 자유지만, 공격적인 태도는 누구에게도 좋을게 없다고 생각합니다.\n추후, 너그러운 피드백 부탁드리겠습니다.\n감사합니다.\n","date":"2024-01-08T17:07:24+09:00","permalink":"https://tteoks.github.io/p/first-post/","title":"First Post"}]